!function(t){var n={};function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(o,r,function(n){return t[n]}.bind(null,r));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=351)}({351:function(t,n,e){e(93),e(94),e(95),e(96),t.exports=e(352)},352:function(t,n){"undefined"!=typeof tinymce&&tinymce.PluginManager.add("mce_hbg_buttons",function(t,n){t.addButton("mce_hbg_buttons",{text:"Button",icon:"",context:"insert",tooltip:"Add button",cmd:"mce_hbg_buttons"}),t.addCommand("mce_hbg_buttons",function(){t.windowManager.open({title:"Add button",url:mce_hbg_buttons.themeUrl+"/library/Admin/TinyMce/MceButtons/mce-buttons-template.php",width:500,height:420,buttons:[{text:"Insert",onclick:function(n){var e=jQuery(".mce-container-body.mce-window-body.mce-abs-layout iframe").contents(),o=e.find("#preview a").attr("class"),r=e.find("#btnText").val(),a='<a href="'+e.find("#btnLink").val()+'" class="'+o+'">'+r+"</a>";return t.insertContent(a),t.windowManager.close(),!0}}]},{stylesSheet:mce_hbg_buttons.styleSheet})})})},93:function(t,n){"undefined"!=typeof tinymce&&tinymce.PluginManager.add("mce_hbg_buttons",function(t,n){t.addButton("mce_hbg_buttons",{text:"Button",icon:"",context:"insert",tooltip:"Add button",cmd:"mce_hbg_buttons"}),t.addCommand("mce_hbg_buttons",function(){t.windowManager.open({title:"Add button",url:mce_hbg_buttons.themeUrl+"/library/Admin/TinyMce/MceButtons/mce-buttons-template.php",width:500,height:420,buttons:[{text:"Insert",onclick:function(n){var e=jQuery(".mce-container-body.mce-window-body.mce-abs-layout iframe").contents(),o=e.find("#preview a").attr("class"),r=e.find("#btnText").val(),a='<a href="'+e.find("#btnLink").val()+'" class="'+o+'">'+r+"</a>";return t.insertContent(a),t.windowManager.close(),!0}}]},{stylesSheet:mce_hbg_buttons.styleSheet})})})},94:function(t,n){tinymce.PluginManager.add("metadata",function(t,n){t.addButton("metadata",{type:"listbox",text:"Metadata",icon:!1,onselect:function(n){t.insertContent(this.value()),this.value("")},values:metadata_button})})},95:function(t,n){tinymce.PluginManager.add("pricons",function(t,n){t.addButton("pricons",{text:"",icon:"pricon-smiley-cool",context:"insert",tooltip:"Pricon",cmd:"openInsertPiconModal"}),t.addCommand("openInsertPiconModal",function(){t.windowManager.open({title:"Pricons",url:n+"/mce-picons.php",width:500,height:400,buttons:[{text:"Insert",onclick:function(n){var e=jQuery(".mce-container-body.mce-window-body.mce-abs-layout iframe").contents(),o=e.find('[name="pricon-size"]').val(),r=e.find('[name="pricon-color"]').val(),a=e.find('[name="pricon-icon"]').val();if(!a.length)return t.windowManager.close(),!1;var i='[pricon icon="'+a+'"';return r.length&&(i=i+' color="'+r+'"'),o.length&&(i=i+' size="'+o+'"'),i+="]",t.insertContent(i),t.windowManager.close(),!0}}]})})})},96:function(t,n){tinymce.PluginManager.add("print_break",function(t,n){t.addButton("printbreak",{text:"",icon:"wp_page",context:"insert",tooltip:"Print Break",onclick:function(n){t.execCommand("Print_Break")}}),t.addCommand("Print_Break",function(){var n,e,o=t.dom,r=t.selection.getNode();e='<img src="'+tinymce.Env.transparentSrc+'" alt="" title="Print Break" class="wp-print-break-tag mce-wp-printbreak" data-mce-resize="false" data-mce-placeholder="1" data-wp-more="printbreak" />',"BODY"===r.nodeName||"P"===r.nodeName&&"BODY"===r.parentNode.nodeName?t.insertContent(e):(n=o.getParent(r,function(t){return!(!t.parentNode||"BODY"!==t.parentNode.nodeName)},t.getBody()))&&("P"===n.nodeName?n.appendChild(o.create("p",null,e).firstChild):o.insertAfter(o.create("p",null,e),n),t.nodeChanged())}),t.on("BeforeSetContent",function(t){t.content&&-1!==t.content.indexOf("\x3c!--printbreak--\x3e")&&(t.content=t.content.replace(/<!--printbreak-->/g,'<img src="'+tinymce.Env.transparentSrc+'" class="wp-print-break-tag mce-wp-printbreak" alt="" title="Print Break" data-wp-more="printbreak" data-mce-resize="false" data-mce-placeholder="1" />'))}),t.on("PostProcess",function(t){t.get&&(t.content=t.content.replace(/<img[^>]+>/g,function(t){var n;return-1!==t.indexOf('data-wp-more="printbreak"')&&(n="\x3c!--printbreak--\x3e"),n||t}))})})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=mce.b335035de30d658aa021.js.map